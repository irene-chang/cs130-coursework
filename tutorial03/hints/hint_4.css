/*****************************************************************/
/* Hint 4: Add second media query and reposition the grid layout */
/*****************************************************************/
body * {
   width: 100%;
   box-sizing: border-box;
   font-family: 'Arial';
}
body {
   margin: 0;
   padding: 20px;
   /*margin and padding diff: margin is to provide spacing on the outside of the container
   "i want everything around me to move away from me"
   padding is opposite: "i want a bit of whitespace between edge of div and my text", will provide a gap */
}
.container {
   color: white;
   display: grid;
   grid-template-columns: 1fr 1fr 1fr 1fr;
   grid-template-rows: 0.2fr 1fr 1fr;
   grid-template-areas:
      "a . b b"
      "c d e f"
      "g g g f";
   min-height: 100vh;
   grid-row-gap: 20px;
   grid-column-gap: 20px;
}
article, aside, section, main {
   display: flex;
   justify-content: center;
   align-items: center;
   border: solid 1px #000;
}

.menu1 {
   grid-area: a;
   background: #de0a7e;
}

.menu2 {
   grid-area: b;
   background: yellow;
   color: #444;
}

article {  background: #00a4cf; }
.card1 { grid-area: c; }
.card2 { grid-area: d; }
.card3 { grid-area: e; }

main {
   grid-area: g;
   background: #00a4cf;
}
aside {
   grid-area: f;
   background: #36353a;
}

@media (max-width: 1200px) {
    .container {
       grid-template-columns: 1fr 1fr;
       grid-template-rows: 1.5fr 2fr 5fr 5fr 5fr;
       grid-template-areas:
          "a b"
          "f f"
          "c d"
          "e e"
          "g g";
    }
}


@media (max-width: 600px) {
   .container {
      grid-template-columns: 1fr 1fr;
      grid-template-rows: auto;
      /*auto saves ratio so row sizes are the same even after resizing*/
      grid-template-areas:
         "a ."
         "b b"
         "c c"
         "d d"
         "e e"
         "g g";
   }
   .menu1, .menu2 { min-height: 40px; }
   article, main { min-height: 30vh; }
   aside { display: none; }
   /*tells menu 2 to not display - not sufficient to just not assign a grid*/
}
